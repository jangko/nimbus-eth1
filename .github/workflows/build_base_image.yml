# nimbus-execution-client
# Copyright (c) 2025 Status Research & Development GmbH
# Licensed under either of
#  * Apache License, version 2.0, ([LICENSE-APACHE](LICENSE-APACHE))
#  * MIT license ([LICENSE-MIT](LICENSE-MIT))
# at your option.
# This file may not be copied, modified, or distributed except according to
# those terms.

name: Build Docker Base Images
on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        target:
          - os: linux
            cpu: amd64
          - os: linux
            cpu: arm64
          - os: windows
            cpu: amd64
          - os: macos
            cpu: arm64
        include:
          - target:
              os: linux
              cpu: amd64
            builder: ubuntu-22.04
          - target:
              os: linux
              cpu: arm64
            builder: ubuntu-22.04-arm
          - target:
              os: macos
            builder: macos-14
          - target:
              os: windows
            builder: windows-latest

    defaults:
      run:
        shell: bash

    name: '${{ matrix.target.os }}-${{ matrix.target.cpu }}'
    runs-on: ${{ matrix.builder }}
    steps:
      - name: Checkout nimbus-eth1
        uses: actions/checkout@v4

      - name: Build rocksdb
        run: |
          if [[ '${{ matrix.target.os }}' == 'windows' ]]; then
            ncpu=${NUMBER_OF_PROCESSORS}
          elif [[ '${{ matrix.target.os }}' == 'macos' ]]; then
            ncpu=$(sysctl -n hw.ncpu)
          else
            ncpu=$(nproc)
          fi
          make -j${ncpu} ROCKSDB_CI_CACHE=RocksBinCache init rocksdb

      - name: Upload artefact
        uses: actions/upload-artifact@v4
        with:
          name: '${{ matrix.target.os }}_${{ matrix.target.cpu }}_rocksdb'
          path: vendor/nim-rocksdb/build/
          retention-days: 2


 #publish-images:
 #  strategy:
 #    fail-fast: false
 #    max-parallel: 20
 #    matrix:
 #      target: [amd64, arm64, win64, macos]
 #
 #  needs: build
 #  name: 'Docker build for ${{ matrix.target }}'
 #  runs-on: ubuntu-latest
 #  steps:
 #    - name: Checkout code
 #      uses: actions/checkout@v4
 #    - name: Login to Docker Hub
 #      uses: docker/login-action@v3
 #      with:
 #        username: ${{ secrets.DOCKERHUB_USERNAME }}
 #        password: ${{ secrets.DOCKERHUB_TOKEN }}
 #    - name: Build and push a base Docker image
 #      run: |
 #        cd docker/dist/base_image
 #        make 'push-${{ matrix.target }}'
